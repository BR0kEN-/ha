---
- name: "Check the Cloudflare tunnel existence"
  ansible.builtin.uri:
    url: "https://api.cloudflare.com/client/v4/accounts/{{ ha.cloudflare.account.id }}/cfd_tunnel?name={{ ha.cloudflare.hostname }}&is_deleted=false"
    headers:
      Authorization: "Bearer {{ ha.cloudflare.account.token }}"
  register: cf_tunnel

- ansible.builtin.include_tasks: cloudflared-cleanup.yml
  loop_control:
    loop_var: tunnel
  loop: "{{ cf_tunnel.json.result }}"
  when: cf_tunnel.json.result | length > 0

#- name: "Create the Cloudflare tunnel"
#  ansible.builtin.uri:
#    url: "https://api.cloudflare.com/client/v4/accounts/{{ ha.cloudflare.account.id }}/cfd_tunnel"
#    method: POST
#    body_format: json
#    headers:
#      Authorization: "Bearer {{ ha.cloudflare.account.token }}"
#    body:
#      name: "{{ ha.cloudflare.hostname }}"
#      config_src: "cloudflare"
#    status_code: 200
#  register: cf_tunnel
#
#- name: "Configure the Cloudflare tunnel"
#  # noinspection HttpUrlsUsage
#  ansible.builtin.uri:
#    url: "https://api.cloudflare.com/client/v4/accounts/{{ ha.cloudflare.account.id }}/cfd_tunnel/{{ cf_tunnel.json.result.id }}/configurations"
#    method: PUT
#    body_format: json
#    headers:
#      Authorization: "Bearer {{ ha.cloudflare.account.token }}"
#    body:
#      config:
#        ingress:
#          - service: "http://homeassistant:{{ ha.ports.ui }}"
#            hostname: "{{ ha.cloudflare.hostname }}"
#            originRequest: {}
#          - service: "http_status:404"
#    status_code: 200
#
##- name: "Configure the DNS for Cloudflare tunnel"
##  ansible.builtin.uri:
##    url: "https://api.cloudflare.com/client/v4/zones/{{ ha.cloudflare.account.zone }}/dns_records"
##    method: POST
##    body_format: json
##    headers:
##      Authorization: "Bearer {{ ha.cloudflare.account.token }}"
##    body:
##      type: CNAME
##      name: "{{ ha.cloudflare.hostname }}"
##      proxied: true
##      content: "{{ cf_tunnel.json.result.id }}.cfargotunnel.com"
##    status_code: 200
#
#- name: "Install and configure the Cloudflared plugin"
#  # noinspection HttpUrlsUsage
#  ansible.builtin.shell: |
#    set -e
#
#    # Get the HA API token.
#    read -r HA_API_TOKEN < <(docker exec homeassistant printenv SUPERVISOR_TOKEN)
#
#    # Get the HA API IP address.
#    read -r HA_IP_ADDRESS < <(jq '.data.ip_address' --raw-output < <(ha supervisor info --raw-json))
#
#    # Define the HA API caller.
#    ha_api_call() {
#      curl -sSL -H "Authorization: Bearer $HA_API_TOKEN" "${@:2}" "http://$HA_IP_ADDRESS/$1"
#    }
#
#    # Add the repo.
#    ha_api_call store/repositories -X POST -d '{"repository": "https://github.com/brenner-tobias/ha-addons"}'
#
#    # Get the slug.
#    read -r HA_CLOUDFLARED_ID < <( \
#      jq '.data.addons[] | select(.name == "Cloudflared") | .slug' --raw-output < <( \
#        ha_api_call store/addons \
#      ) \
#    )
#
#    # Ensure installed.
#    ha_api_call "store/addons/$HA_CLOUDFLARED_ID/install" -X POST
#
#    # Configure.
#    ha_api_call "addons/$HA_CLOUDFLARED_ID/options" -X POST \
#      -d '{"options": {"tunnel_token": "{{ cf_tunnel.json.result.token }}", "external_hostname": "", "additional_hosts": []}}'
#
#    # Start.
#    ha_api_call "addons/$HA_CLOUDFLARED_ID/start" -X POST
#  register: a
#  args:
#    executable: /bin/bash
#
#- debug: var=a
